name: CI/CD Worflow

on: [push, pull_request]

jobs:
  # CI part
  build:
    runs-on: ubuntu-latest
    outputs:
      project_version: ${{ steps.get_version.outputs.project_version }}
    steps: 
    - name: Checkout riseclipse-metamodel-nsd2016
      uses: actions/checkout@v2
      with:
        path: riseclipse-metamodel-nsd2016
        repository: RiseClipse/riseclipse-metamodel-nsd2016
        ref: master

    - name: Checkout riseclipse-validator-scl2003
      uses: actions/checkout@v2
      with:
        path: riseclipse-validator-scl2003
        repository: RiseClipse/riseclipse-validator-scl2003
        ref: sonarqube-integration

    - name: Checkout riseclipse-validator-ocl
      uses: actions/checkout@v2
      with:
        path: riseclipse-validator-ocl
        repository: RiseClipse/riseclipse-validator-ocl
        ref: master

    - name: Checkout riseclipse-metamodel-scl2003
      uses: actions/checkout@v2
      with:
        path: riseclipse-metamodel-scl2003
        repository: RiseClipse/riseclipse-metamodel-scl2003
        ref: master

    - name: Checkout riseclipse-editor
      uses: actions/checkout@v2
      with:
        path: riseclipse-editor
        repository: RiseClipse/riseclipse-editor
        ref: master

    - name: Checkout riseclipse-main
      uses: actions/checkout@v2
      with:
        path: riseclipse-main
        repository: RiseClipse/riseclipse-main
        ref: master

    - name: Checkout riseclipse-developer
      uses: actions/checkout@v2
      with:
        path: riseclipse-developer
        ref: ${{ github.ref_name }}

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven

    - name: Build with Maven 
      env:
        SONAR_TOKEN = ${{ secrets.SONAR_TOKEN }}
      run: |
        cd riseclipse-developer
        cd fr.centralesupelec.edf.riseclipse.developer.maven.validator.scl
        mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=riseclipse_riseclipse-validator-scl2003

    - name: Extract Maven project version
      run: |
        cd riseclipse-developer
        echo ::set-output name=project_version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
      id: get_version

    - name: Show extracted Maven project version
      run: echo ${{ steps.get_version.outputs.project_version }}

    - name: Zip artifacts all
      run: |
        mv ${{ github.workspace }}/riseclipse-validator-scl2003/fr.centralesupelec.edf.riseclipse.iec61850.scl.validator/target/RiseClipseValidatorSCL-${{ steps.get_version.outputs.project_version }}.jar ${{ github.workspace }}
        mv ${{ github.workspace }}/riseclipse-validator-scl2003/fr.centralesupelec.edf.riseclipse.iec61850.scl.validator.ui/target/RiseClipseValidatorSCLApplication-${{ steps.get_version.outputs.project_version }}.jar ${{ github.workspace }}
        zip ${{ github.workspace }}/RiseClipse.zip RiseClipseValidatorSCL-${{ steps.get_version.outputs.project_version }}.jar RiseClipseValidatorSCLApplication-${{ steps.get_version.outputs.project_version }}.jar
        ls ${{ github.workspace }}

    - name: Upload artifact Validator SCL CLI
      uses: actions/upload-artifact@v2
      with:
        name: RiseClipseValidatorSCL-${{ steps.get_version.outputs.project_version }}.jar
        path: ${{ github.workspace }}/RiseClipseValidatorSCL-${{ steps.get_version.outputs.project_version }}.jar

    - name: Upload artifact Validator SCL UI
      uses: actions/upload-artifact@v2
      with:
        name: RiseClipseValidatorSCLApplication-${{ steps.get_version.outputs.project_version }}.jar
        path: ${{ github.workspace }}/RiseClipseValidatorSCLApplication-${{ steps.get_version.outputs.project_version }}.jar

    - name: Upload artifact zipped
      uses: actions/upload-artifact@v2
      with:
        name: RiseClipse.zip
        path: ${{ github.workspace }}/RiseClipse.zip

  test:
    runs-on: ubuntu-latest
    needs: [build]

    steps: 
    - name: Checkout riseclipse-validator-scl2003-test
      uses: actions/checkout@v2
      with:
        path: riseclipse-validator-scl2003-test
        repository: RiseClipse/riseclipse-validator-scl2003-test
        ref: master

    - name: Checkout riseclipse-validator-scl2003
      uses: actions/checkout@v2
      with:
        path: riseclipse-validator-scl2003
        repository: RiseClipse/riseclipse-validator-scl2003
        ref: master

    - name: Download artifact .jar
      uses: actions/download-artifact@master
      with:
        name: RiseClipseValidatorSCL-${{ needs.build.outputs.project_version }}.jar
        path: ${{ github.workspace }}

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven

    - name: Run tests 
      run: |
        cd riseclipse-validator-scl2003-test   
        echo ${{ github.workspace }}
        ls ${{ github.workspace }}
        ./run_tests.sh -j ${{ github.workspace }}/RiseClipseValidatorSCL-${{ needs.build.outputs.project_version }}.jar

  # CD Part
  publish_release:
    needs: [build, test]
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/master' && contains(github.ref, 'refs/tags/')
    steps: 
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{github.ref_name}}
        release_name: RiseClipse ${{ needs.build.outputs.project_version }}
        body: This RiseClipse release contains the latest changes available. The ZIP file contains a CLI and UI version of the project. You can learn more by reading the documentation.
        draft: true
        prerelease: false
  
    - name: Download artifact zip
      uses: actions/download-artifact@master
      with:
        name: RiseClipse.zip
        path: ${{ github.workspace }}

    - name: Upload Release ZIP
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ${{ github.workspace }}/RiseClipse.zip
        asset_name: RiseClipse.zip
        asset_content_type: application/zip

  publish_dockerhub:
    runs-on: ubuntu-latest
    needs: [build, test]
    # if: github.ref == 'refs/heads/master' && contains(github.ref, 'refs/tags/')
    steps: 
    # Login to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: alsoares59/riseclipse

    # Get Dockerfiles from checkout
    - name: Checkout riseclipse-validator-scl2003
      uses: actions/checkout@v2
      with:
        path: riseclipse-validator-scl2003
        repository: RiseClipse/riseclipse-validator-scl2003
        ref: ${{ github.ref_name }}

    # Download and unzip artefacts
    - name: Download artifact zip
      uses: actions/download-artifact@master
      with:
        name: RiseClipse.zip
        path: ${{ github.workspace }}

    - name: Unzip artefacts
      run: |
        unzip RiseClipse.zip -d ${{ github.workspace }}

    # Build and push images for each validator
    - name: Build and push Docker image Validator SCL CLI
      uses: docker/build-push-action@v2
      with:
        context: ${{ github.workspace }}
        file: ${{ github.workspace }}/riseclipse-validator-scl2003/Dockerfile
        push: true
        tags: alsoares59/riseclipse:validator-scl-${{ needs.build.outputs.project_version }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: GH_WS=${{ github.workspace }}

  publish_github_io:
    needs: [build, test]
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/master' && contains(github.ref, 'refs/tags/')
    steps: 
    - name: Checkout riseclipse github.io
      uses: actions/checkout@v2
      with:
        path: riseclipse.github.io
        repository: RiseClipse/riseclipse.github.io
        ref: dev-ci

    # Download and unzip artefacts
    - name: Download artifact zip
      uses: actions/download-artifact@master
      with:
        name: RiseClipse.zip
        path: ${{ github.workspace }}

    - name: Unzip artefacts
      run: |
        unzip RiseClipse.zip -d ${{ github.workspace }}

    - name: Update downloads file with newer versions
      run: |
        cp ${{ github.workspace }}/RiseClipseValidatorSCL-${{ needs.build.outputs.project_version }}.jar ${{ github.workspace }}/riseclipse.github.io/RiseClipseValidatorSCL-${{ needs.build.outputs.project_version }}.jar
        ls ${{ github.workspace }}

    - name: Apply variables to template
      run: |
        export RiseClipseCLI="RiseClipseValidatorSCL-${{ needs.build.outputs.project_version }}.jar"
        cd ${{ github.workspace }}/riseclipse.github.io
        rm downloads.md
        cp templates/downloads-tp.md  downloads.md
        envsubst < downloads.md

    - name: Add & Commit previous changes
      uses: EndBug/add-and-commit@v7.5.0
      with:
        cwd: "${{ github.workspace }}/riseclipse.github.io"
