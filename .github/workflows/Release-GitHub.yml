name: Release on GitHub 

# This CD workflow releases packages to GitHub repository AND creates a new release branch
# It only runs on MASTER branch AFTER Build and Test Workflow is completed if it was triggered by Release Workflow

on: workflow_call

jobs:
  publish_release:
    runs-on: ubuntu-latest

    steps: 
    # Get artefacts and version
    - name: Download artifact
      uses: dawidd6/action-download-artifact@v2
      with:
        github_token: ${{secrets.GITHUB_TOKEN}}
        workflow: Build-Test.yml
        workflow_conclusion: success
        path: ${{ github.workspace }}/artifacts

    - name: Checkout ${{ github.event.repository.name }}
      uses: actions/checkout@v2
      with:
        path: ${{ github.event.repository.name }}
        ref: ${{ github.ref_name }}

    - name: Extract Maven project version
      run: |
        cd ${{ github.event.repository.name }}
        echo ::set-output name=project_version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
      id: get_version
        
    # Create new branch and release with artifacts
    - name: Create Release branch
      uses: peterjgrainger/action-create-branch@v2.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        branch: 'release/v${{ steps.get_version.outputs.project_version }}'

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get_version.outputs.project_version }}
        release_name: RiseClipse ${{ steps.get_version.outputs.project_version }}
        body: This RiseClipse release contains the latest changes available. Contains a CLI and UI version of the project. You can learn more by reading the documentation.
        draft: false
        prerelease: false

    - name: Upload binaries to release
      uses: AButler/upload-release-assets@v2.0
      with:
        files: ${{ github.workspace }}/artifacts/*.jar;${{ github.workspace }}/artifacts/*.jar/*.jar
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        release-tag: v${{ steps.get_version.outputs.project_version }}